{"id":18,\n "title":"Nessus Windows Scan Not Performed with Admin Privileges",\n "slug":"nessus-windows-scan-not-performed-admin-privileges",\n "updated_on":"2021-03-29T05:28:44.798731+00:00",\n "content":"<h1>Nessus Windows Scan Not Performed with Admin Privileges</h1>\\r\\nOn a recent job I received the following error while trying to run Nessus:\\r\\n\\r\\n> \\"Nessus Windows Scan Not Performed with Admin Privileges\\" and \\"Authentication Success Insufficient Access\\". \\r\\n\\r\\nI found this odd as I had used the Admin credentials to run my authenticated scan. The first thing I did was to double-check that the account I had been given was either in the local group `Administrators` or the domain group `Domain Admins`. It turned out I was in the Administrators local group but yet Nessus could not remotely connect to the `C$` share. I tried to connect to the `C$` share from the command line to confirm if this was something wrong with Nessus. \\r\\n\\r\\n```\\r\\nnet use s: \\\\\\\\RemoteMachine\\\\C$  /user:pentest\\r\\n```\\r\\n\\r\\nThe result was, I got an \\"error 5\\" or \\"Access Denied\\". So Google to the rescue!  As it is likely you have found this page due to being on an engagement and you are stuck kicking your scan off (hopefully unlikely me you are not in the toilets researching on your phone while on a clients site).  I will skip the details of how I got to my eureka moment.\\r\\n\\r\\n## User Account Control (UAC )\\r\\n\\r\\nUser Account Control prompts a user when a given action requires elevated rights. Under the default configuration, UAC affects remote connections in the following manner. All local accounts with the exception of the RID 500 Administrator must perform their privileged administrative actions by physically logging into the host or over Remote Desktop Protocol (RDP). \\r\\n\\r\\n>  Domain accounts that have local Administrator privileges such as being in the Domain Administrators group do not have to worry about this and can connect remotely. \\r\\n\\r\\nWith one exception which we will come to shortly; any non RID 500 local admin account remotely connecting to a machine via WMI, PSEXEC, RPC, WinRM are returned tokens that are \\"filtered\\" (essentially medium integrity). \\r\\n\\r\\nIn my case, I have been given an account that was set up as a Local Administrator but this was not the default RID 500 user.\\r\\n\\r\\n## Admin Approval Mode\\r\\n\\r\\nAdmin Approval mode is disabled by default, however, when this setting is enabled it enforces User Account Control (UAC) for the built-in Administrator. \\r\\n\\r\\nThis feature was first introduced in Windows Vista and as we can see from [following article on microsoft.com](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gpsb/7c705718-f58e-4886-8057-37c8fd9aede1) the setting is configured via the following registry key. \\r\\n\\r\\n```\\r\\nHKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\FilterAdministratorToken\\r\\n```\\r\\n\\r\\nLeaving this at 0 results in only the built-in Administrator account (RID 500) being given a \\"Full Token\\" however if this is set to 1 then the built-in Administrator is placed into Admin Approval mode when performing administrative tasks. \\r\\n\\r\\n\\r\\n## LocalAccountTokenFilterPolicy\\r\\n\\r\\n\\r\\nThere is however a way to work around this! If the following registry key is set to a '1'\\r\\n```\\r\\nHKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\LocalAccountTokenFilterPolicy\\r\\n```\\r\\n\\r\\nThis key does not exist by default however if it is added to the registry with a value of 1 then remote connections from all local Administrators (not just the RID 500 user) are granted full high-integrity tokens during authentication. \\r\\n\\r\\n> As a side note, this would also mean these users would be able to pass-the-hash. \\r\\n\\r\\nIf we look at the following article from Microsoft on [obtaining data from a remote computer](https://docs.microsoft.com/en-us/windows/win32/winrm/obtaining-data-from-a-remote-computer?redirectedfrom=MSDN) we can see this interesting snippet. \\r\\n\\r\\n\\"Because of User Account Control (UAC), the remote account must be a domain account and a member of the remote computer Administrators group. If the account is a local computer member of the Administrators group, then UAC does not allow access to the WinRM service. To access a remote WinRM service in a workgroup, UAC filtering for local accounts must be disabled by creating the following DWORD registry entry and setting its value to 1\\"\\r\\n\\r\\nSetting this registry setting \\r\\n```\\r\\nREG add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\\r\\n```",\n "created_on":"2021-03-21T17:34:29.380007+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"Solving \\"Nessus Windows Scan Not Performed with Admin Privileges\\" and \\"Authentication Success Insufficient Access\\" by setting LocalAccountTokenFilterPolicy",\n "meta_keywords":"Nessus,  LocalAccountTokenFilterPolicy, remote scan",\n "cover_image":"posts/images/2021/03/25/nessus-cover.jpg",\n "icon_image":"",\n "publish_on":"2021-03-21T17:08:48+00:00",\n "happiness_rating":40}
{"id":16,\n "title":"Hostnames For Setting Up Labs",\n "slug":"hostnames-setting-labs",\n "updated_on":"2021-03-29T05:30:04.436741+00:00",\n "content":"<h1>Hostnames For Setting Up Labs</h1>\\r\\nWhen setting up a pentest lab, one of the most important decisions you need to make is choosing a scheme for your machine names. \\r\\n\\r\\nThe below resource is something I often use when setting up new labs. \\r\\n\\r\\nYou can get ideas ranging from mythology, stars, planets and Greek Gods to the Seven Deadly Sins and the book of Mormon. Check it out next time you need ideas for a naming scheme. \\r\\n\\r\\n[namingschemes.com](https://namingschemes.com/)",\n "created_on":"2021-03-20T20:53:51.767279+00:00",\n "status":1,\n "author_id":1,\n "category_id":64,\n "meta_description":"Generating hostname schemes for your lab environment",\n "meta_keywords":"lab building, choosing hostnames, choosing machine names, building labs",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-21T02:54:13+00:00",\n "happiness_rating":20}
{"id":15,\n "title":"Error Dumping Postgres Database",\n "slug":"error-dumping-postgres-database",\n "updated_on":"2021-03-29T05:31:17.739923+00:00",\n "content":"<h1>Error Dumping Postgres Database</h1>\\r\\nWhen dumping database\\r\\n```\\r\\nsudo -u postgres pg_dump database-name  > dump.sql\\r\\n```\\r\\n\\r\\nYou get an error that looks like \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/21/532719ab-7409-4371-9037-be1ce0637a23.png\\" class=\\"img-fluid\\" alt=\\"perl: warning: Falling back to the standard locale ('c')\\">\\r\\n\\r\\n\\r\\nThe fix\\r\\n\\r\\n```\\r\\ndpkg-reconfigure locales\\r\\n```",\n "created_on":"2021-03-17T16:45:35.931229+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"Postgres database dumping, fix error \\"perl: warning: Falling back to the standard locale ('c')\\"",\n "meta_keywords":"pg_dump, locale, Error Dumping Postgres Database,",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-21T02:54:13+00:00",\n "happiness_rating":30}
{"id":19,\n "title":"eLearnSecurity New Learning Platform",\n "slug":"elearnsecurity-new-learning-platform",\n "updated_on":"2021-03-29T05:40:17.002666+00:00",\n "content":"# eLearnSecurity new learning platform\\r\\n\\r\\nAs a multiple eLearnSecurity certification holder, I recently received an email inviting me to try out a Beta test of their new training platform.  Upon opening the email, I was quite surprised that the training platform wasn't hosted on eLearnSecurity; it was hosted on ine.com. \\r\\n\\r\\n\\"Where had I seen or heard that name before?\\", then it hit me! I had been looking at [ine.com](http://ine.com) back when I was thinking about pursuing my CCIE; nearly all network engineers I knew at that time had suggested they had the best CCIE training! But what had this to do with eLearnSecurity?\\r\\n\\r\\nIt turns out that eLearnSecurity wanted to focus on becoming a certification body. So while focusing its attention on doing just that, it has passed overall training to [ine.com](http://ine.com) to take care of. Considering the old price of some of the training that eLearnSecurity used to provide, it could cost anywhere up to $2000 to complete a single certificate; the new model has made certification very affordable. \\r\\n\\r\\n## The new model\\r\\n\\r\\nIn short, the new model is; you can go to eLearnSecurity and buy an exam voucher for any exam, and if you feel like you are ready to take the exam, you can book it in with no pre-requisites or additional fees needed (N.B. a typical exam attempt voucher will cost you $400). If, however, you require training, then you can sign up for an [ine.com](http://ine.com) subscription. INE content is split into 4 categories, Cloud, Networking, Data and CyberSecurity. The three former categories are available monthly or yearly; however, CyberSecurity is only available as a yearly subscription.  \\r\\n\\r\\n## My Decision\\r\\n\\r\\nUp until a week ago, I was debating on whether to \\"go for it!\\" with regards to the ine.com subscription as I had just recently purchased a place on [CQure Academy: Advanced Windows Security Course 2021 - Module 1]\\r\\n the Advanced Windows Security course by CQure and I was ruminating on enrolling in the new Crack the Perimeter replacement course by Offensive Security (the OSEP). That was until I received a Black Friday discount email of 40% of the yearly price! For just $1199, down from $1999, I would be able to complete all eLearnSecurity training courses (assuming I finish them within the year - the length of my training subscription). Without hesitation, I signed up, and from this point, the \\"Game is on!\\". \\r\\n\\r\\nThis blog post, similar to the [link to the CQurepost], will be my ongoing review of my experience with [ine.com](http://ine.com) and the eLearnSecurity certification process over the next year.  Let’s see how many courses I can complete. 😏\\r\\n\\r\\n<img src=\\"/media/markdown/2020/11/23/ccc1c176-a7c7-4c30-b0ad-184090136048.png\\" class=\\"img-fluid\\" alt=\\"The ine.com and eLearnSecurity New Learning Platform\\">",\n "created_on":"2021-03-21T21:10:22.846621+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"eLearnSecurity platform beta test of new ine.com training platform",\n "meta_keywords":"eLearnSecurity, ine.com, pentest certification, hacking training",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2020-11-23T09:00:00+00:00",\n "happiness_rating":85}
{"id":20,\n "title":"VMware Workstation cannot connect to the virtual machine",\n "slug":"vmware-workstation-cannot-connect-virtual-machine",\n "updated_on":"2021-03-29T05:27:12.133119+00:00",\n "content":"<h1>VMware Workstation cannot connect to the virtual machine</h1>\\r\\nHave you ever had this error when trying to start a Virtual Machine?? \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/23/f6bf486c-d485-4ce9-90ab-9edd74ab6198.png\\" class=\\"img-fluid\\" alt=\\"VMware Workstation cannot connect to the virtual machine.\\">\\r\\n\\r\\nLet me start this article by saying I love VMware! Like most hackers and penetration testers, I spend most of my day working in various Virtual Machines (VMs). Over time you get to see lots of errors and quirky bugs, and you learn how to fix these issues. Quite often, a colleague will send me a screenshot over the internal comms, asking if I know how to fix a particular issue. To reduce support time and share the wealth with my readers, I have decided that each time I encounter one of these from now on, I will document the fix.  \\r\\n\\r\\n## The Error\\r\\n\\r\\n>VMware Workstation cannot connect to the virtual machine. Make sure you have the right to run the program, access all directories the program uses, and access all directories for temporary files. \\r\\n\\r\\n>The VMware Authorization Service is not running. \\r\\n\\r\\n## How to fix this?\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 1)</h5> \\r\\n\\r\\nRight-click on the taskbar and select task manager. \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/23/a0884e80-3f2f-4f17-9a2e-a2df961785f8.png\\" class=\\"img-fluid\\" alt=\\"Go to taskmanager\\">\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 2)</h5>\\r\\n\\r\\n Kill off any VMware Processes \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/23/4f8d486c-33e4-4692-971f-b65d512dad23.png\\" class=\\"img-fluid\\" alt=\\"Kill VMware Processes\\">\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 3)</h5>\\r\\n\\r\\nPress `Win` + `R` and type in `services.msc`\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/23/69ee42d4-29b7-410c-8537-532364f6f64d.png\\" class=\\"img-fluid\\" alt=\\"Open Up Services.msc\\">\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 4)</h5>\\r\\n\\r\\nStart the \\"VMware Authorization Service\\"\\r\\n\\r\\nAll done! You should now be able to login into your Virtual Machin! \\r\\n\\r\\nIf these steps do not work for you or you encounter a different problem, then please leave a comment. Also, leave a comment if you have a better workaround or you have found a different solution.",\n "created_on":"2021-03-23T09:07:42.68439+00:00",\n "status":1,\n "author_id":1,\n "category_id":73,\n "meta_description":"VMware Workstation cannot connect to the virtual machine. Make sure you have the right to run the program, access all directories the program uses, and access all directories for temporary files. The VMware Authorization Service is not running.",\n "meta_keywords":"VMware, VMware Authorization Service",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-23T08:54:39+00:00",\n "happiness_rating":70}
{"id":14,\n "title":"Enable SSH on MacOSX",\n "slug":"enable-ssh-macosx",\n "updated_on":"2021-03-29T05:34:19.185917+00:00",\n "content":"<h1enable-ssh-macosx</h1>\\r\\n<h5 class=\\"content-step\\">Step 1</h5>\\r\\n\\r\\nClick on the system preferences icon\\r\\n\\r\\n![](/media/markdown/2021/03/17/b7fba445-87aa-450b-a4b9-5486714ffecd.png)\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 2</h5>\\r\\n\\r\\nYou will be presented with the system preferences panel. Click \\"Sharing\\".\\r\\n\\r\\n![](/media/markdown/2021/03/17/cb0736ee-d53a-4348-b3a0-e5555417c15b.png)\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 3</h5>\\r\\n\\r\\nOn the left-hand navigation menu, make sure \\"remote login\\" is checked.\\r\\n\\r\\n![](/media/markdown/2021/03/17/a33bfe22-bcff-4c2e-9dd1-5510f66b436d.png)\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 4</h5>\\r\\n\\r\\nClick the plus icon as indicated by the arrow in the screenshot. From here we can add individual system users and provide them access. \\r\\n\\r\\n![](/media/markdown/2021/03/17/41f0deee-891a-4d12-9d10-398cf563f34d.png)\\r\\n\\r\\n<h5 class=\\"content-step\\">Step 5</h5>\\r\\n\\r\\nAlternatively, if you wish to give access to everyone on the system you can select the radio control next to the label \\"Allow access for:\\" and select \\"All users\\" to enable remote login for all users\\r\\n\\r\\n![](/media/markdown/2021/03/17/ffa6af59-b53a-4698-8c0a-a90d94eb409d.png)",\n "created_on":"2021-03-17T12:39:44.868574+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"Enabling remote secure shell (SSH) access to a Mac OSX system.",\n "meta_keywords":"Max OSX, SSH, Secure Shell, enable-ssh-macosx,",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-21T02:54:13+00:00",\n "happiness_rating":40}
{"id":13,\n "title":"Missing Mounts In Kali Linux And Parrot OS",\n "slug":"missing-mounts-kali-linux-and-parrot-os",\n "updated_on":"2021-03-29T05:39:25.115621+00:00",\n "content":"<h1>Missing Mounts In Kali Linux And Parrot OS</h1>\\r\\nHave you ever had your VM on suspend and gone to check one of your mounted shared drives to find it missing? \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/4d4fb2be-a4f9-4b93-9c2d-e54fb0b7f0f7.png\\" class=\\"img-fluid\\" alt=\\"Missing Mounts In Kali Linux And Parrot OS\\">\\r\\n\\r\\nYou can see in the settings that the share has been mounted. \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/8fb5a525-ea4a-4b97-b34b-25d94509666c.png\\" class=\\"img-fluid\\" alt=\\"\\">\\r\\n\\r\\nDepending on what Linux kernel you have depends on what commands you can use to help you out of this situation. \\r\\n\\r\\n[VMware Docs - Mounting Shared Folders in a Linux Guest\\r\\n](https://docs.vmware.com/en/VMware-Workstation-Pro/16.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/34cea096-5c06-47a3-bc76-29721702ecea.png\\" class=\\"img-fluid\\" alt=\\"\\">\\r\\n\\r\\n\\r\\n```\\r\\n:::bash\\r\\ncat <<EOF > /usr/local/sbin/mount-shared-folders\\r\\n#!/bin/bash\\r\\nvmware-hgfsclient | while read folder; do\\r\\n  vmwpath=\\"/mnt/hgfs/\\\\${folder}\\"\\r\\n  mkdir -p \\"\\\\${vmwpath}\\"\\r\\n  umount -f \\"\\\\${vmwpath}\\" &>/dev/null\\r\\n  vmhgfs-fuse -o allow_other -o nonempty -o auto_unmount \\".host:/\\\\${folder}\\" \\"\\\\${vmwpath}\\"\\r\\ndone\\r\\nsleep 2s\\r\\nEOF\\r\\n```\\r\\n\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/e5e5e0b0-c301-45ea-8a92-c2471aa95298.png\\" class=\\"img-fluid\\" alt=\\"\\">\\r\\n\\r\\nWe can create a script as a bash alias. Chmod it and run it to mount are shares. \\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/253cd668-2073-4fa6-9993-86e52f3a3f39.png\\" class=\\"img-fluid\\" alt=\\"\\">\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/6de727e4-5c50-4b1e-8f5d-da345f0bf887.png\\" class=\\"img-fluid\\" alt=\\"\\">\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/17/652a2569-4340-433c-afca-39b60feaf038.png\\" class=\\"img-fluid\\" alt=\\"\\">",\n "created_on":"2021-03-17T11:35:14.764751+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"Mounting Shared Folders in a Linux Guest with VMware",\n "meta_keywords":"vmware, workstation pro, mounting shared folders, linux guest, Missing Mounts In Kali Linux, Parrot OS,",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-17T02:54:13+00:00",\n "happiness_rating":30}
{"id":12,\n "title":"Resetting The Nessus Password On Kali Linux Or Parrot OS",\n "slug":"resetting-nessus-password-on-kali-linux-or-parrot-os",\n "updated_on":"2021-03-29T05:37:13.11082+00:00",\n "content":"<h1>Resetting The Nessus Password On Kali Linux Or Parrot OS</h1>\\r\\n\\r\\nHave you ever returned to your Nessus to realise you have forgotten your password or just forgotten the user name?\\r\\n\\r\\nYou are not alone, this happens to the best of us. \\r\\n\\r\\n![What is my password](/media/markdown/2021/03/17/83bea23c-9bda-44b3-9a3f-2cc19ee69db1.png)\\r\\n\\r\\nNessus is the world’s most popular vulnerability assessment tool. It is an open-source vulnerability scanner although there is also a commercial option. option Open a terminal and type the command `cd /opt/nessus/sbin` to navigate to the `sbin` directory. Here type `ls`  to see the contents of this directory as shown below.\\r\\n\\r\\n![Nessus Directory](/media/markdown/2021/03/17/b714d822-e088-431c-adac-830ff4f63679.png)\\r\\n\\r\\nIf you cant remember the user name then you can just run the following command `./nessuscli lsuser` to see all the Nessus users configured. \\r\\n\\r\\n![Listing Users](/media/markdown/2021/03/17/51cf2c23-aebf-4526-a67c-7878c9aaf0db.png)\\r\\n\\r\\nHere, we have only one. Let us reset the 'evilsaint' user! \\r\\n\\r\\nType command ` ./nessuscli chpasswd evilsaint`. The system will prompt you to enter the new password. Enter the password two times as shown below. You have successfully reset your Nessus password. Now login with the new password.\\r\\n\\r\\n![Changing the password](/media/markdown/2021/03/17/1ace8c68-2700-4242-ba14-a130df2ca3a6.png)",\n "created_on":"2021-03-17T10:42:17.299839+00:00",\n "status":1,\n "author_id":1,\n "category_id":null,\n "meta_description":"Resetting The Nessus Password On Kali Linux Or Parrot OS - Have you ever returned to your Nessus to realise you have forgotten your password or just forgotten the user name?",\n "meta_keywords":"Resetting The Nessus Password,  Kali Linux, Parrot OS,  Nessus, password, user name,",\n "cover_image":"posts/images/2021/03/23/Resetting-The-Nessus-Password-On-Kali-Linux-Or-Parrot-OS.jpg",\n "icon_image":"posts/images/2021/03/23/nessus2.png",\n "publish_on":"2021-03-21T02:54:13+00:00",\n "happiness_rating":35}
{"id":21,\n "title":"Appending Dates To Filenames in Cron Jobs",\n "slug":"appending-dates-filenames-cron-jobs",\n "updated_on":"2021-03-29T05:42:09.454885+00:00",\n "content":"<h1>Appending Dates To Filenames in Cron Jobs</h1>\\r\\nAs a heavy proponent of automation, I constantly use `cron` to schedule tasks. A `cron` is a utility available in Linux that allows you to schedule a command or script to run automatically at a specified time and date. A ___cron job___ is the name for the scheduled task.\\r\\n\\r\\nSome of the tasks I set up ___cron jobs___ for are deleting temporary files, running commands synchronise data folders and tasks that email me updates based on various gathered pieces of data. \\r\\n\\r\\nI plan to do a full article on the `cron` service in the future, but for now, I wanted to cover a recent gotcha I got asked for input into solving. \\r\\n\\r\\n### How do I append dates to filenames in cron jobs. \\r\\n\\r\\nSo it is quite common to want to append dates in filenames. We have probably all seen a script such as\\r\\n\\r\\n```\\r\\n:::bash\\r\\n#!/bin/bash\\r\\n\\r\\ntar -cf backup-$(date +%Y-%m-%d-%H%M%S).tar file1.txt file2.txt\\r\\n```\\r\\n\\r\\nThose who don't know [what the `tar` command does](https://linux.die.net/man/1/tar). \\r\\n\\r\\n> A quick tip - while I don't want to get away from the point of this article, but if you didn't require the hour, minutes and seconds, then we can modify the previous command; using backticks instead of `$()` and using the `date -I` syntax, less typing. See the example below.\\r\\n\\r\\nThe image below shows a file listing using the  `ls -l` command. The image shows two files called file1.txt and file2.txt, respectively. Using the `tar` and `date` commands, we make a `tar` archive of the two files appended with the date and time at the end of the archive name. \\r\\n\\r\\nWe then show the listing again, and we can see the creation of `backup-2021-03-27-152146.tar`. Next, we see a variation of command being run using just the `date -I` enclosed in backticks. The output of this does not show the hours, minutes and seconds; however, it is faster to type and has another benefit we will see in a minute.\\r\\n\\r\\n<img src=\\"/media/markdown/2021/03/27/63778ef4-da31-464f-8748-397463b45a49.png\\" class=\\"img-fluid\\" alt=\\"Appending Dates To Filenames in Cron Jobs\\">\\r\\n\\r\\nWe have seen a typical use case of a command that appends the date. Why can't I use this in a cron? Surely we can paste the above example in a script called _mybackupscript.sh_ and run it every minute like the following... right!\\r\\n\\r\\n```\\r\\n# Example of job definition:\\r\\n# .---------------- minute (0 - 59)\\r\\n# |  .------------- hour (0 - 23)\\r\\n# |  |  .---------- day of month (1 - 31)\\r\\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\\r\\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\\r\\n# |  |  |  |  |\\r\\n# *  *  *  *  * user-name  command to be executed\\r\\n*/1  *  *  *  * root /root/mybackupscript.sh\\r\\n```\\r\\n\\r\\n**Wrong** - We can read the manual for the crontab `man 5 crontab` to get our answer.\\r\\n\\r\\n> The \\"sixth\\" field (the rest of the line) specifies the command to be run. The entire command portion of the line, up to a newline or a \\"%\\" character, will be executed by /bin/sh or by the shell specified in the SHELL variable of the cronfile. A \\"%\\" character in the command, unless escaped with a backslash (\\\\), will be changed into newline characters, and all data after the first % will be sent to the command as standard input.\\r\\n\\r\\nSo how do we work around this? \\r\\n\\r\\nJust as the excerpt says, we escape like so\\r\\n\\r\\n\\r\\n:::bash\\r\\n#!/bin/bash\\r\\n\\r\\ntar -cf backup-$(date +\\\\%Y-\\\\%m-\\\\%d-\\\\%H\\\\%M\\\\%S).tar file1.txt file2.txt\\r\\n```\\r\\n\\r\\nSo, Saint? Why did you waste time showing us `date -I`.... because it doesn't contain a percentage sign ;-).",\n "created_on":"2021-03-27T14:58:07.09467+00:00",\n "status":0,\n "author_id":1,\n "category_id":null,\n "meta_description":"Appending the date to the end of cron entries.",\n "meta_keywords":"crontab, date command, cron job, escaping percentage sign, Appending Dates To Filenames in Cron Jobs,",\n "cover_image":"",\n "icon_image":"",\n "publish_on":"2021-03-27T14:57:31+00:00",\n "happiness_rating":18}
